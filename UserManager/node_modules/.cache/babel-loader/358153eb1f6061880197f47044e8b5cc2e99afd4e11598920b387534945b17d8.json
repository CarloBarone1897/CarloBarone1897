{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seerg\\\\Desktop\\\\carlobarone1897.GitHub.io\\\\CarloBarone1897.github.io\\\\UserManager\\\\src\\\\components\\\\Users\\\\AddUser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport styles from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUser = props => {\n  _s();\n  const [enteredUsername, setEnteredUsername] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const addUserHandler = event => {\n    event.preventDefault();\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      return;\n    }\n    if (+enteredAge < 1) {\n      /*OBS! enteredAge is initialized above\r\n      as a STRING, not a number. Usually it should work, but, for avoiding bullcrap,\r\n      you can fix it with a \"forced\" type conversion (which is pointless,\r\n        since JS has no \"types\", but still, adding a \"+\" before the variable\r\n        in the if condition*/\n      return;\n    }\n    console.log(enteredUsername, enteredAge);\n    setEnteredUsername(\"\");\n    setEnteredAge(\"\");\n  };\n  const userNameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        onChange: userNameChangeHandler,\n        value: enteredUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \" Age (Years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"age\",\n        type: \"number\",\n        onChange: ageChangeHandler,\n        value: enteredAge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AddUser, \"ysyiUzxXn9R514mlTq+k9dFM1J8=\");\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Card","styles","Button","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","addUserHandler","event","preventDefault","trim","length","console","log","userNameChangeHandler","target","value","ageChangeHandler","input"],"sources":["C:/Users/seerg/Desktop/carlobarone1897.GitHub.io/CarloBarone1897.github.io/UserManager/src/components/Users/AddUser.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport styles from \"./AddUser.module.css\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst AddUser = (props) => {\r\n  const [enteredUsername, setEnteredUsername] = useState(\"\");\r\n  const [enteredAge, setEnteredAge] = useState(\"\");\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\r\n      return;\r\n    }\r\n    if (+enteredAge < 1) {\r\n      /*OBS! enteredAge is initialized above\r\n     as a STRING, not a number. Usually it should work, but, for avoiding bullcrap,\r\n    you can fix it with a \"forced\" type conversion (which is pointless,\r\n        since JS has no \"types\", but still, adding a \"+\" before the variable\r\n        in the if condition*/\r\n      return;\r\n    }\r\n    console.log(enteredUsername, enteredAge);\r\n    setEnteredUsername(\"\");\r\n    setEnteredAge(\"\");\r\n  };\r\n\r\n  const userNameChangeHandler = (event) => {\r\n    setEnteredUsername(event.target.value);\r\n  };\r\n\r\n  const ageChangeHandler = (event) => {\r\n    setEnteredAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className={styles.input}>\r\n      <form onSubmit={addUserHandler}>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          onChange={userNameChangeHandler}\r\n          value={enteredUsername}\r\n        />\r\n        <label htmlFor=\"age\"> Age (Years)</label>\r\n        <input\r\n          id=\"age\"\r\n          type=\"number\"\r\n          onChange={ageChangeHandler}\r\n          value={enteredAge}\r\n        />\r\n        <Button type=\"submit\">Add user</Button>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,cAAc;AAAC;AAElC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAIN,eAAe,CAACO,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,IAAIN,UAAU,CAACK,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACzE;IACF;IACA,IAAI,CAACN,UAAU,GAAG,CAAC,EAAE;MACnB;AACN;AACA;AACA;AACA;MACM;IACF;IACAO,OAAO,CAACC,GAAG,CAACV,eAAe,EAAEE,UAAU,CAAC;IACxCD,kBAAkB,CAAC,EAAE,CAAC;IACtBE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMQ,qBAAqB,GAAIN,KAAK,IAAK;IACvCJ,kBAAkB,CAACI,KAAK,CAACO,MAAM,CAACC,KAAK,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAIT,KAAK,IAAK;IAClCF,aAAa,CAACE,KAAK,CAACO,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,oBACE,QAAC,IAAI;IAAC,SAAS,EAAEjB,MAAM,CAACmB,KAAM;IAAA,uBAC5B;MAAM,QAAQ,EAAEX,cAAe;MAAA,wBAC7B;QAAO,OAAO,EAAC,UAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC1C;QACE,EAAE,EAAC,UAAU;QACb,IAAI,EAAC,MAAM;QACX,QAAQ,EAAEO,qBAAsB;QAChC,KAAK,EAAEX;MAAgB;QAAA;QAAA;QAAA;MAAA,QACvB,eACF;QAAO,OAAO,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eACzC;QACE,EAAE,EAAC,KAAK;QACR,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAEc,gBAAiB;QAC3B,KAAK,EAAEZ;MAAW;QAAA;QAAA;QAAA;MAAA,QAClB,eACF,QAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA;EAClC;IAAA;IAAA;IAAA;EAAA,QACF;AAEX,CAAC;AAAC,GAnDIJ,OAAO;AAAA,KAAPA,OAAO;AAqDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}