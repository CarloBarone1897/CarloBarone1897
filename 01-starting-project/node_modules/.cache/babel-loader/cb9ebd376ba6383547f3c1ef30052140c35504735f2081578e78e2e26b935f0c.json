{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seerg\\\\Desktop\\\\carlobarone1897.GitHub.io\\\\CarloBarone1897.github.io\\\\01-starting-project\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./CourseInput.module.css\";\nimport styled from \"styled-components\";\n\n/*The following component will be created in this file;\nNormally it's a good rule to create one file for each \ncomponent, but in this case it's doable since this component\nwill be used ONLY HERE.\n*/\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     margin-bottom: 0.5rem;\n//     color: ${props => (props.invalid ? 'red' : 'black')};\n//   }\n\n//   & input {\n//     display: block;\n//     width: 100%;\n//     border: 1px solid ${props => (props.invalid ? 'red' : '#ccc')};\n//     //With this synthax I can dynamically change pieces of the style\n//     //All thanks to the props characteristics\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n\n// `;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseInput = props => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return; //We need STYLING here because\n      //a simple return statement is not enough\n    }\n\n    props.onAddGoal(enteredValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['form-control']} ${!isValid && styles.invalid}`,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseInput, \"ThKE3neuvaE9uj2GU0j+/HEwCa4=\");\n_c = CourseInput;\nexport default CourseInput;\nvar _c;\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"names":["React","useState","Button","styles","styled","CourseInput","props","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","invalid"],"sources":["C:/Users/seerg/Desktop/carlobarone1897.GitHub.io/CarloBarone1897.github.io/01-starting-project/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./CourseInput.module.css\";\nimport styled from \"styled-components\";\n\n/*The following component will be created in this file;\nNormally it's a good rule to create one file for each \ncomponent, but in this case it's doable since this component\nwill be used ONLY HERE.\n*/\n// const FormControl = styled.div`\n//   margin: 0.5rem 0;\n\n//   & label {\n//     font-weight: bold;\n//     display: block;\n//     margin-bottom: 0.5rem;\n//     color: ${props => (props.invalid ? 'red' : 'black')};\n//   }\n\n//   & input {\n//     display: block;\n//     width: 100%;\n//     border: 1px solid ${props => (props.invalid ? 'red' : '#ccc')};\n//     //With this synthax I can dynamically change pieces of the style\n//     //All thanks to the props characteristics\n//     font: inherit;\n//     line-height: 1.5rem;\n//     padding: 0 0.25rem;\n//   }\n\n//   & input:focus {\n//     outline: none;\n//     background: #fad0ec;\n//     border-color: #8b005d;\n//   }\n\n// `;\n\n\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return; //We need STYLING here because\n      //a simple return statement is not enough\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={`${styles['form-control']} ${!isValid && styles.invalid}`}> {/*The synthax for properties can be \n      both \"styles.class\" or styles[class].\n      \n      This line will show how to \n      DYNAMICALLY CHANGE CLASS \n      */}\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n        </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAIA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMU,sBAAsB,GAAIC,KAAK,IAAK;IACxC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE;MACxCN,UAAU,CAAC,IAAI,CAAC;IAClB;IACAF,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMG,iBAAiB,GAAIL,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,EAAE;IACtB,IAAIX,YAAY,CAACQ,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACpCN,UAAU,CAAC,KAAK,CAAC;MACjB,OAAO,CAAC;MACR;IACF;;IACAJ,KAAK,CAACa,SAAS,CAACZ,YAAY,CAAC;EAC/B,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEU,iBAAkB;IAAA,wBAChC;MAAK,SAAS,EAAG,GAAEd,MAAM,CAAC,cAAc,CAAE,IAAG,CAACM,OAAO,IAAIN,MAAM,CAACiB,OAAQ,EAAE;MAAA,6BAMxE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAC1B;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAET;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACjD,eACR,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEX,CAAC;AAAC,GAnCIN,WAAW;AAAA,KAAXA,WAAW;AAqCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}